#include <LiquidCrystal.h> //Please replace the single quote characters ('') with the parenthesis character (<>)
 
LiquidCrystal lcd(0, 1, 4, 5, 6, 7); // Creates an LCD object. Parameters: (rs, enable, d4, d5, d6, d7)

#include<Servo.h>

Servo myservo;
int const trigPin = 10;
int const echoPin = 9;
int const buzzPin = 2;
int const ldrPin = A0;
int const servopin = 8;
int val;
int thresh = 600;
int pos = 0;
int duration, distance;

void setup()
{
   //Serial.begin(9600);
   
  lcd.begin(16,2); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display
  pinMode(trigPin, OUTPUT); // trig pin will have pulses output
  pinMode(echoPin, INPUT); // echo pin should be input to get pulse width
  pinMode(buzzPin, OUTPUT); // buzz pin is output to control buzzering
  pinMode(ldrPin, INPUT); // ldr pin is input to control buzzering
  myservo.attach(servopin);
}


void loop()
{
  val = analogRead(ldrPin);              // Read sensor vlue

if (val < thresh) {                //compare threshold to sensor value
myservo.write(0);                 //move servo to position given by the amount of light 

}

else if (val > thresh) {   //compare threshold to sensor value
myservo.write(90);  

delay(300);
}
  digitalWrite(trigPin, HIGH); 
  delay(1);
  digitalWrite(trigPin, LOW);
 
  duration = pulseIn(echoPin, HIGH);

  distance = (duration/2) / 29.1;
 
    if (distance <= 50 && distance >= 0) {
     
      digitalWrite(buzzPin, LOW);
       lcd.setCursor(0,0); // Sets the location at which subsequent text written to the LCD will be displayed
      lcd.print("U1=F"); // Prints string " " on the LCD
      delay(1000);
      lcd.clear();
    } else {
   
      digitalWrite(buzzPin, HIGH);
           lcd.setCursor(0,0); // Sets the location at which subsequent text written to the LCD will be displayed
      lcd.print("U1=E "); // Prints string " " on the LCD
      delay(1000);
      lcd.clear();
    }
    
    delay(60);
}
